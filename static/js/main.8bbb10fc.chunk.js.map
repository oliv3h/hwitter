{"version":3,"sources":["fb.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Hweet.js","components/HweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["authService","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","dbService","getFirestore","storageService","getStorage","Profile","refreshUser","userObject","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","getMyHweets","a","q","query","collection","where","uid","orderBy","getDocs","forEach","doc","console","log","id","data","onSubmit","event","preventDefault","updateProfile","useEffect","className","type","placeholder","value","onChange","target","autoFocus","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Hweet","hweetObject","isOwner","editing","setEditing","text","newHweet","setNewHweet","onDeleteClick","window","confirm","attachmenturl","deleteObject","ref","deleteDoc","toggleEditing","updateDoc","src","alt","faTrash","faPencilAlt","HweetFactory","userObj","hweet","setHweet","attachment","setAttachment","attachmentRef","uuidv4","uploadString","getDownloadURL","createdAt","Date","now","creatorId","addDoc","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","hweets","setHweets","onSnapshot","querySnapshot","hweetArray","docs","map","document","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","currentUser","Object","assign","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8bbb10fc.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = app;\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();","import { updateProfile } from \"@firebase/auth\";\r\nimport { collection, getDocs, onSnapshot, orderBy, query, where } from \"@firebase/firestore\";\r\nimport { authService, dbService } from \"fb\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Profile = ({ refreshUser, userObject }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObject.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n        refreshUser();\r\n    };\r\n\r\n    const getMyHweets = async () => {\r\n        const q = query(collection(dbService, \"hweets\")\r\n            , where(\"creatorId\", \"==\", userObject.uid)\r\n            , orderBy(\"createdAt\", \"desc\"));\r\n        const querySnapshot = await getDocs(q);\r\n        querySnapshot.forEach((doc) => {\r\n            console.log(doc.id, \" => \", doc.data());\r\n        });\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const { value } = event.target;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObject.displayName !== newDisplayName) {\r\n            await updateProfile(userObject, {\r\n                displayName: newDisplayName,\r\n            });\r\n        refreshUser();\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getMyHweets();\r\n    });\r\n    return (<div className=\"container\">\r\n        <form onSubmit={onSubmit}>\r\n            <input type=\"text\" placeholder=\"Display Name\" value={newDisplayName} onChange={onChange} autoFocus className=\"formInput\"/>\r\n            <input type=\"submit\" value=\"Update Profile!\" className=\"formBtn\" style={{marginTop: 10 }} />\r\n        </form>\r\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n            Log Out\r\n        </span>\r\n    </div>);\r\n};\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { authService } from \"fb\";\r\nimport {\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const { target: { name, value } } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            if (newAccount) {\r\n                // create account\r\n                await createUserWithEmailAndPassword(\r\n                    authService,\r\n                    email,\r\n                    password\r\n                );\r\n            } else {\r\n                // login\r\n                await signInWithEmailAndPassword(\r\n                    authService,\r\n                    email,\r\n                    password\r\n                );\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\"></input>\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\"></input>\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Login\"} className=\"authInput authSubmit\"></input>\r\n                { error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign in\" : \"Create Account\"}</span>\r\n        </>\r\n    )\r\n};\r\nexport default AuthForm;","import React from \"react\";\r\nimport { authService } from \"fb\";\r\nimport {\r\n    GoogleAuthProvider,\r\n    GithubAuthProvider,\r\n    signInWithPopup\r\n} from \"firebase/auth\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    \r\n    const onSocialClick = async (event) => {\r\n        const { target: { name } } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new GithubAuthProvider();\r\n        }\r\n        await signInWithPopup(authService, provider);\r\n    };\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fb\";\r\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\nimport { deleteObject, ref } from \"@firebase/storage\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Hweet = ({ hweetObject, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newHweet, setNewHweet] = useState(hweetObject.text);\r\n    const onDeleteClick = async (event) => {\r\n        const ok = window.confirm(\"Are you sure?\");\r\n        if (ok) {\r\n            // delete\r\n            if (hweetObject.attachmenturl !== \"\") {\r\n                await deleteObject(ref(storageService, hweetObject.attachmenturl));\r\n            }\r\n            await deleteDoc(doc(dbService, `hweets/${hweetObject.id}`))\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing(prev => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await updateDoc(doc(dbService, `hweets/${hweetObject.id}`), {\r\n            text: newHweet\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const { value } = event.target;\r\n        setNewHweet(value);\r\n    }\r\n    return (\r\n        <div className=\"hweet\">\r\n            {\r\n                editing ? (\r\n                    <>\r\n                        <form onSubmit={onSubmit} className=\"container hweetEdit\">\r\n                            <input type=\"text\" placeholder=\"edit your hweet!\" value={newHweet} onChange={onChange} required autoFocus className=\"formInput\"/>\r\n                            <input type=\"submit\" value=\"Update Hweet!\"className=\"formBtn\" />\r\n                        </form>\r\n                        <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                            Cancel\r\n                        </span>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <h4>{hweetObject.text}</h4>\r\n                        {hweetObject.attachmenturl && <img src={hweetObject.attachmenturl} alt=\"images\"/>}\r\n                        {isOwner && (\r\n                            <div className=\"hweet__actions\">\r\n                                <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </span>\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </span>\r\n                            </div>\r\n                        )} \r\n                    </>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Hweet;","import { dbService, storageService } from \"fb\";\r\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport React, {useState } from \"react\";\r\nimport { addDoc, collection } from \"@firebase/firestore\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst HweetFactory = ({userObj}) => {\r\n    const [hweet, setHweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    \r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (hweet === \"\") {\r\n            return;\r\n        }\r\n\r\n        let attachmenturl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n            await uploadString(attachmentRef, attachment, \"data_url\");\r\n            attachmenturl = await getDownloadURL(attachmentRef);\r\n        }\r\n        \r\n        const newHweet = {\r\n            text: hweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmenturl : attachmenturl,\r\n        };\r\n\r\n        try {\r\n            await addDoc(collection(dbService, \"hweets\"), newHweet);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n        setHweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const { value } = event.target;\r\n        setHweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const { files } = event.target;\r\n        const theFile = files[0];\r\n\r\n        // use fileReader API\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const { result } = finishedEvent.currentTarget;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} value={hweet} onChange={onChange} className=\"factoryInput__input\"/>\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            \r\n            <input id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                opacity: 0,\r\n                }}\r\n            />\r\n            \r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                <img\r\n                    src={attachment}\r\n                    style={{\r\n                    backgroundImage: attachment,\r\n                        }}\r\n                    alt=\"attachment\"\r\n                />\r\n                <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                    <span>Remove</span>\r\n                    <FontAwesomeIcon icon={faTimes} />\r\n                </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default HweetFactory;","import Hweet from \"components/Hweet\";\r\nimport { dbService } from \"fb\";\r\nimport { collection, onSnapshot, query } from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport HweetFactory from \"components/HweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n\r\n    const [hweets, setHweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const q = query(collection(dbService, \"hweets\"));\r\n        onSnapshot(q, (querySnapshot) => {\r\n            const hweetArray = querySnapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data()\r\n            }));\r\n            setHweets(hweetArray);\r\n        });\r\n    }, []);\r\n    return (\r\n        <div className=\"container\">\r\n            <HweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {hweets.map((hweetObject) => (\r\n                    <Hweet key={hweetObject.id} hweetObject={hweetObject} isOwner={hweetObject.creatorId === userObj.uid}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObject}) => {\r\n    return (\r\n        <nav>\r\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n                <li>\r\n                    <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                        }}>\r\n                        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                        <span style={{ marginTop: 10 }}>\r\n                                {userObject\r\n                                ? `${userObject.displayName}의 Profile`\r\n                                : \"Profile\"}\r\n                            </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return (\r\n        <>\r\n        <Router>\r\n            { isLoggedIn && <Navigation userObject={userObj} />}\r\n                <Switch>\r\n                <>\r\n                {isLoggedIn ? (\r\n                    <div style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 80,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObject={userObj} refreshUser={refreshUser}/>\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    </>\r\n                )\r\n                }\r\n                </>\r\n            </Switch>\r\n        </Router>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import AppRouter from \"components/Router\";\nimport React, { useEffect, useState } from \"react\";\nimport { authService } from \"fb\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  \n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n\t  setUserObj(Object.assign({}, user));\n    //setUserObj(authService.currentUser);\n  };\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={isLoggedIn} userObj={userObj} /> : \"Initializing...\"}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}